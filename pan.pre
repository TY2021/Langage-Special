# 1 "Diner2.pml"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 341 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "Diner2.pml" 2


mtype {FREE, BUSY};
mtype {EATING, THINKING, HUNGRY};
mtype fork[5] = FREE;

proctype philosopher(int id) {
  int n = 5;;
  int left = ((id - 1) + n) % n;
  int right = id;
  mtype state = THINKING;
  do
    :: atomic {
          if
            :: id % 2 == 0 && fork[right] != BUSY -> fork[right] = BUSY; fork[left] = BUSY;
            :: id % 2 != 0 && fork[left] != BUSY -> fork[left] = BUSY ; fork[right] = BUSY;
          fi
    }
    state = EATING;
    printf("Philosopher%d is eating.\n",id); progress:
    fork[left] = FREE;
    fork[right] = FREE;
    state = THINKING;
  od
}

init {
   short proc = 0;
   do
     :: proc < 5; ->
               run philosopher(proc); proc++
     :: proc >= 5; ->
               break
   od
}
